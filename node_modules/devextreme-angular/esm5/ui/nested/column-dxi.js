/*!
 * devextreme-angular
 * Version: 19.2.6
 * Build date: Thu Jan 30 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import * as tslib_1 from "tslib";
/* tslint:disable:max-line-length */
/* tslint:disable:use-input-property-decorator */
import { Component, NgModule, Host, SkipSelf, Output, EventEmitter, ContentChildren, forwardRef, QueryList } from '@angular/core';
import { NestedOptionHost, } from 'devextreme-angular/core';
import { DxiDataGridColumn } from './base/data-grid-column-dxi';
import { DxiButtonComponent } from './button-dxi';
import { DxiValidationRuleComponent } from './validation-rule-dxi';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'devextreme-angular/core';
var DxiColumnComponent = /** @class */ (function (_super) {
    tslib_1.__extends(DxiColumnComponent, _super);
    function DxiColumnComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        _this._createEventEmitters([
            { emit: 'filterValueChange' },
            { emit: 'filterValuesChange' },
            { emit: 'groupIndexChange' },
            { emit: 'selectedFilterOperationChange' },
            { emit: 'sortIndexChange' },
            { emit: 'sortOrderChange' },
            { emit: 'visibleChange' },
            { emit: 'visibleIndexChange' }
        ]);
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    DxiColumnComponent_1 = DxiColumnComponent;
    Object.defineProperty(DxiColumnComponent.prototype, "_optionPath", {
        get: function () {
            return 'columns';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiColumnComponent.prototype, "buttonsChildren", {
        get: function () {
            return this._getOption('buttons');
        },
        set: function (value) {
            this.setChildren('buttons', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiColumnComponent.prototype, "columnsChildren", {
        get: function () {
            return this._getOption('columns');
        },
        set: function (value) {
            this.setChildren('columns', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiColumnComponent.prototype, "validationRulesChildren", {
        get: function () {
            return this._getOption('validationRules');
        },
        set: function (value) {
            this.setChildren('validationRules', value);
        },
        enumerable: true,
        configurable: true
    });
    var DxiColumnComponent_1;
    DxiColumnComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", EventEmitter)
    ], DxiColumnComponent.prototype, "filterValueChange", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", EventEmitter)
    ], DxiColumnComponent.prototype, "filterValuesChange", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", EventEmitter)
    ], DxiColumnComponent.prototype, "groupIndexChange", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", EventEmitter)
    ], DxiColumnComponent.prototype, "selectedFilterOperationChange", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", EventEmitter)
    ], DxiColumnComponent.prototype, "sortIndexChange", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", EventEmitter)
    ], DxiColumnComponent.prototype, "sortOrderChange", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", EventEmitter)
    ], DxiColumnComponent.prototype, "visibleChange", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", EventEmitter)
    ], DxiColumnComponent.prototype, "visibleIndexChange", void 0);
    tslib_1.__decorate([
        ContentChildren(forwardRef(function () { return DxiButtonComponent; })),
        tslib_1.__metadata("design:type", QueryList),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], DxiColumnComponent.prototype, "buttonsChildren", null);
    tslib_1.__decorate([
        ContentChildren(forwardRef(function () { return DxiColumnComponent_1; })),
        tslib_1.__metadata("design:type", QueryList),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], DxiColumnComponent.prototype, "columnsChildren", null);
    tslib_1.__decorate([
        ContentChildren(forwardRef(function () { return DxiValidationRuleComponent; })),
        tslib_1.__metadata("design:type", QueryList),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], DxiColumnComponent.prototype, "validationRulesChildren", null);
    DxiColumnComponent = DxiColumnComponent_1 = tslib_1.__decorate([ tslib_1.__param(0, SkipSelf()), tslib_1.__param(0, Host()),
        tslib_1.__param(1, Host()),
        tslib_1.__metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiColumnComponent);
DxiColumnComponent.ɵfac = function DxiColumnComponent_Factory(t) { return new (t || DxiColumnComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 5), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 1)); };
DxiColumnComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxiColumnComponent, selectors: [["dxi-column"]], contentQueries: function DxiColumnComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, DxiButtonComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, DxiColumnComponent_1, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, DxiValidationRuleComponent, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.buttonsChildren = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnsChildren = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.validationRulesChildren = _t);
    } }, inputs: { alignment: "alignment", allowEditing: "allowEditing", allowExporting: "allowExporting", allowFiltering: "allowFiltering", allowFixing: "allowFixing", allowGrouping: "allowGrouping", allowHeaderFiltering: "allowHeaderFiltering", allowHiding: "allowHiding", allowReordering: "allowReordering", allowResizing: "allowResizing", allowSearch: "allowSearch", allowSorting: "allowSorting", autoExpandGroup: "autoExpandGroup", buttons: "buttons", calculateCellValue: "calculateCellValue", calculateDisplayValue: "calculateDisplayValue", calculateFilterExpression: "calculateFilterExpression", calculateGroupValue: "calculateGroupValue", calculateSortValue: "calculateSortValue", caption: "caption", cellTemplate: "cellTemplate", columns: "columns", cssClass: "cssClass", customizeText: "customizeText", dataField: "dataField", dataType: "dataType", editCellTemplate: "editCellTemplate", editorOptions: "editorOptions", encodeHtml: "encodeHtml", falseText: "falseText", filterOperations: "filterOperations", filterType: "filterType", filterValue: "filterValue", filterValues: "filterValues", fixed: "fixed", fixedPosition: "fixedPosition", format: "format", formItem: "formItem", groupCellTemplate: "groupCellTemplate", groupIndex: "groupIndex", headerCellTemplate: "headerCellTemplate", headerFilter: "headerFilter", hidingPriority: "hidingPriority", isBand: "isBand", lookup: "lookup", minWidth: "minWidth", name: "name", ownerBand: "ownerBand", renderAsync: "renderAsync", selectedFilterOperation: "selectedFilterOperation", setCellValue: "setCellValue", showEditorAlways: "showEditorAlways", showInColumnChooser: "showInColumnChooser", showWhenGrouped: "showWhenGrouped", sortIndex: "sortIndex", sortingMethod: "sortingMethod", sortOrder: "sortOrder", trueText: "trueText", type: "type", validationRules: "validationRules", visible: "visible", visibleIndex: "visibleIndex", width: "width" }, outputs: { filterValueChange: "filterValueChange", filterValuesChange: "filterValuesChange", groupIndexChange: "groupIndexChange", selectedFilterOperationChange: "selectedFilterOperationChange", sortIndexChange: "sortIndexChange", sortOrderChange: "sortOrderChange", visibleChange: "visibleChange", visibleIndexChange: "visibleIndexChange" }, features: [ɵngcc0.ɵɵProvidersFeature([NestedOptionHost]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiColumnComponent_Template(rf, ctx) { }, styles: [""] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxiColumnComponent, [{
        type: Component,
        args: [{
                selector: 'dxi-column',
                template: '',
                providers: [NestedOptionHost],
                inputs: [
                    'alignment',
                    'allowEditing',
                    'allowExporting',
                    'allowFiltering',
                    'allowFixing',
                    'allowGrouping',
                    'allowHeaderFiltering',
                    'allowHiding',
                    'allowReordering',
                    'allowResizing',
                    'allowSearch',
                    'allowSorting',
                    'autoExpandGroup',
                    'buttons',
                    'calculateCellValue',
                    'calculateDisplayValue',
                    'calculateFilterExpression',
                    'calculateGroupValue',
                    'calculateSortValue',
                    'caption',
                    'cellTemplate',
                    'columns',
                    'cssClass',
                    'customizeText',
                    'dataField',
                    'dataType',
                    'editCellTemplate',
                    'editorOptions',
                    'encodeHtml',
                    'falseText',
                    'filterOperations',
                    'filterType',
                    'filterValue',
                    'filterValues',
                    'fixed',
                    'fixedPosition',
                    'format',
                    'formItem',
                    'groupCellTemplate',
                    'groupIndex',
                    'headerCellTemplate',
                    'headerFilter',
                    'hidingPriority',
                    'isBand',
                    'lookup',
                    'minWidth',
                    'name',
                    'ownerBand',
                    'renderAsync',
                    'selectedFilterOperation',
                    'setCellValue',
                    'showEditorAlways',
                    'showInColumnChooser',
                    'showWhenGrouped',
                    'sortIndex',
                    'sortingMethod',
                    'sortOrder',
                    'trueText',
                    'type',
                    'validationRules',
                    'visible',
                    'visibleIndex',
                    'width'
                ],
                styles: ['']
            }]
    }], function () { return [{ type: ɵngcc1.NestedOptionHost, decorators: [{
                type: SkipSelf
            }, {
                type: Host
            }] }, { type: ɵngcc1.NestedOptionHost, decorators: [{
                type: Host
            }] }]; }, { buttonsChildren: [{
            type: ContentChildren,
            args: [forwardRef(function () { return DxiButtonComponent; })]
        }], columnsChildren: [{
            type: ContentChildren,
            args: [forwardRef(function () { return DxiColumnComponent_1; })]
        }], validationRulesChildren: [{
            type: ContentChildren,
            args: [forwardRef(function () { return DxiValidationRuleComponent; })]
        }], filterValueChange: [{
            type: Output
        }], filterValuesChange: [{
            type: Output
        }], groupIndexChange: [{
            type: Output
        }], selectedFilterOperationChange: [{
            type: Output
        }], sortIndexChange: [{
            type: Output
        }], sortOrderChange: [{
            type: Output
        }], visibleChange: [{
            type: Output
        }], visibleIndexChange: [{
            type: Output
        }] }); })();
    return DxiColumnComponent;
}(DxiDataGridColumn));
export { DxiColumnComponent };
var DxiColumnModule = /** @class */ (function () {
    function DxiColumnModule() {
    }
DxiColumnModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DxiColumnModule });
DxiColumnModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DxiColumnModule_Factory(t) { return new (t || DxiColumnModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxiColumnModule, { declarations: [DxiColumnComponent], exports: [DxiColumnComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxiColumnModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    DxiColumnComponent
                ],
                exports: [
                    DxiColumnComponent
                ]
            }]
    }], function () { return []; }, null); })();
    return DxiColumnModule;
}());
export { DxiColumnModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sdW1uLWR4aS5qcyIsInNvdXJjZXMiOlsiZGV2ZXh0cmVtZS1hbmd1bGFyL3VpL25lc3RlZC9jb2x1bW4tZHhpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7OztHQVdHOztBQUVILG9DQUFvQztBQUVwQyxpREFBaUQ7QUFFakQsT0FBTyxFQUNILFNBQVMsRUFDVCxRQUFRLEVBQ1IsSUFBSSxFQUNKLFFBQVEsRUFDUixNQUFNLEVBQ04sWUFBWSxFQUNaLGVBQWUsRUFDZixVQUFVLEVBQ1YsU0FBUyxFQUNaLE1BQU0sZUFBZSxDQUFDO0FBTXZCLE9BQU8sRUFDSCxnQkFBZ0IsR0FDbkIsTUFBTSx5QkFBeUIsQ0FBQztBQUNqQyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDbEQsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7OztBQTBFbkU7SUFBd0MsOENBQWlCO0lBc0VyRCw0QkFBZ0MsZ0JBQWtDLEVBQ2xELFVBQTRCO1FBRDVDLFlBRUksaUJBQU8sU0FlVjtRQWJHLEtBQUksQ0FBQyxvQkFBb0IsQ0FBQztZQUN0QixFQUFFLElBQUksRUFBRSxtQkFBbUIsRUFBRTtZQUM3QixFQUFFLElBQUksRUFBRSxvQkFBb0IsRUFBRTtZQUM5QixFQUFFLElBQUksRUFBRSxrQkFBa0IsRUFBRTtZQUM1QixFQUFFLElBQUksRUFBRSwrQkFBK0IsRUFBRTtZQUN6QyxFQUFFLElBQUksRUFBRSxpQkFBaUIsRUFBRTtZQUMzQixFQUFFLElBQUksRUFBRSxpQkFBaUIsRUFBRTtZQUMzQixFQUFFLElBQUksRUFBRSxlQUFlLEVBQUU7WUFDekIsRUFBRSxJQUFJLEVBQUUsb0JBQW9CLEVBQUU7U0FDakMsQ0FBQyxDQUFDO1FBRUgsZ0JBQWdCLENBQUMsZUFBZSxDQUFDLEtBQUksQ0FBQyxDQUFDO1FBQ3ZDLFVBQVUsQ0FB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QztTQUFuQixlQUFlIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBkZXZleHRyZW1lLWFuZ3VsYXJcbiAqIFZlcnNpb246IDE5LjIuNlxuICogQnVpbGQgZGF0ZTogVGh1IEphbiAzMCAyMDIwXG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDEyIC0gMjAyMCBEZXZlbG9wZXIgRXhwcmVzcyBJbmMuIEFMTCBSSUdIVFMgUkVTRVJWRURcbiAqXG4gKiBUaGlzIHNvZnR3YXJlIG1heSBiZSBtb2RpZmllZCBhbmQgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIHRlcm1zXG4gKiBvZiB0aGUgTUlUIGxpY2Vuc2UuIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IG9mIHRoZSBwcm9qZWN0IGZvciBkZXRhaWxzLlxuICpcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9EZXZFeHByZXNzL2RldmV4dHJlbWUtYW5ndWxhclxuICovXG5cbi8qIHRzbGludDpkaXNhYmxlOm1heC1saW5lLWxlbmd0aCAqL1xyXG5cclxuLyogdHNsaW50OmRpc2FibGU6dXNlLWlucHV0LXByb3BlcnR5LWRlY29yYXRvciAqL1xyXG5cclxuaW1wb3J0IHtcclxuICAgIENvbXBvbmVudCxcclxuICAgIE5nTW9kdWxlLFxyXG4gICAgSG9zdCxcclxuICAgIFNraXBTZWxmLFxyXG4gICAgT3V0cHV0LFxyXG4gICAgRXZlbnRFbWl0dGVyLFxyXG4gICAgQ29udGVudENoaWxkcmVuLFxyXG4gICAgZm9yd2FyZFJlZixcclxuICAgIFF1ZXJ5TGlzdFxyXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuXHJcblxyXG5cclxuXHJcbmltcG9ydCB7XHJcbiAgICBOZXN0ZWRPcHRpb25Ib3N0LFxyXG59IGZyb20gJ2RldmV4dHJlbWUtYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRHhpRGF0YUdyaWRDb2x1bW4gfSBmcm9tICcuL2Jhc2UvZGF0YS1ncmlkLWNvbHVtbi1keGknO1xyXG5pbXBvcnQgeyBEeGlCdXR0b25Db21wb25lbnQgfSBmcm9tICcuL2J1dHRvbi1keGknO1xyXG5pbXBvcnQgeyBEeGlWYWxpZGF0aW9uUnVsZUNvbXBvbmVudCB9IGZyb20gJy4vdmFsaWRhdGlvbi1ydWxlLWR4aSc7XHJcblxyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ2R4aS1jb2x1bW4nLFxyXG4gICAgdGVtcGxhdGU6ICcnLFxyXG4gICAgc3R5bGVzOiBbJyddLFxyXG4gICAgcHJvdmlkZXJzOiBbTmVzdGVkT3B0aW9uSG9zdF0sXHJcbiAgICBpbnB1dHM6IFtcclxuICAgICAgICAnYWxpZ25tZW50JyxcclxuICAgICAgICAnYWxsb3dFZGl0aW5nJyxcclxuICAgICAgICAnYWxsb3dFeHBvcnRpbmcnLFxyXG4gICAgICAgICdhbGxvd0ZpbHRlcmluZycsXHJcbiAgICAgICAgJ2FsbG93Rml4aW5nJyxcclxuICAgICAgICAnYWxsb3dHcm91cGluZycsXHJcbiAgICAgICAgJ2FsbG93SGVhZGVyRmlsdGVyaW5nJyxcclxuICAgICAgICAnYWxsb3dIaWRpbmcnLFxyXG4gICAgICAgICdhbGxvd1Jlb3JkZXJpbmcnLFxyXG4gICAgICAgICdhbGxvd1Jlc2l6aW5nJyxcclxuICAgICAgICAnYWxsb3dTZWFyY2gnLFxyXG4gICAgICAgICdhbGxvd1NvcnRpbmcnLFxyXG4gICAgICAgICdhdXRvRXhwYW5kR3JvdXAnLFxyXG4gICAgICAgICdidXR0b25zJyxcclxuICAgICAgICAnY2FsY3VsYXRlQ2VsbFZhbHVlJyxcclxuICAgICAgICAnY2FsY3VsYXRlRGlzcGxheVZhbHVlJyxcclxuICAgICAgICAnY2FsY3VsYXRlRmlsdGVyRXhwcmVzc2lvbicsXHJcbiAgICAgICAgJ2NhbGN1bGF0ZUdyb3VwVmFsdWUnLFxyXG4gICAgICAgICdjYWxjdWxhdGVTb3J0VmFsdWUnLFxyXG4gICAgICAgICdjYXB0aW9uJyxcclxuICAgICAgICAnY2VsbFRlbXBsYXRlJyxcclxuICAgICAgICAnY29sdW1ucycsXHJcbiAgICAgICAgJ2Nzc0NsYXNzJyxcclxuICAgICAgICAnY3VzdG9taXplVGV4dCcsXHJcbiAgICAgICAgJ2RhdGFGaWVsZCcsXHJcbiAgICAgICAgJ2RhdGFUeXBlJyxcclxuICAgICAgICAnZWRpdENlbGxUZW1wbGF0ZScsXHJcbiAgICAgICAgJ2VkaXRvck9wdGlvbnMnLFxyXG4gICAgICAgICdlbmNvZGVIdG1sJyxcclxuICAgICAgICAnZmFsc2VUZXh0JyxcclxuICAgICAgICAnZmlsdGVyT3BlcmF0aW9ucycsXHJcbiAgICAgICAgJ2ZpbHRlclR5cGUnLFxyXG4gICAgICAgICdmaWx0ZXJWYWx1ZScsXHJcbiAgICAgICAgJ2ZpbHRlclZhbHVlcycsXHJcbiAgICAgICAgJ2ZpeGVkJyxcclxuICAgICAgICAnZml4ZWRQb3NpdGlvbicsXHJcbiAgICAgICAgJ2Zvcm1hdCcsXHJcbiAgICAgICAgJ2Zvcm1JdGVtJyxcclxuICAgICAgICAnZ3JvdXBDZWxsVGVtcGxhdGUnLFxyXG4gICAgICAgICdncm91cEluZGV4JyxcclxuICAgICAgICAnaGVhZGVyQ2VsbFRlbXBsYXRlJyxcclxuICAgICAgICAnaGVhZGVyRmlsdGVyJyxcclxuICAgICAgICAnaGlkaW5nUHJpb3JpdHknLFxyXG4gICAgICAgICdpc0JhbmQnLFxyXG4gICAgICAgICdsb29rdXAnLFxyXG4gICAgICAgICdtaW5XaWR0aCcsXHJcbiAgICAgICAgJ25hbWUnLFxyXG4gICAgICAgICdvd25lckJhbmQnLFxyXG4gICAgICAgICdyZW5kZXJBc3luYycsXHJcbiAgICAgICAgJ3NlbGVjdGVkRmlsdGVyT3BlcmF0aW9uJyxcclxuICAgICAgICAnc2V0Q2VsbFZhbHVlJyxcclxuICAgICAgICAnc2hvd0VkaXRvckFsd2F5cycsXHJcbiAgICAgICAgJ3Nob3dJbkNvbHVtbkNob29zZXInLFxyXG4gICAgICAgICdzaG93V2hlbkdyb3VwZWQnLFxyXG4gICAgICAgICdzb3J0SW5kZXgnLFxyXG4gICAgICAgICdzb3J0aW5nTWV0aG9kJyxcclxuICAgICAgICAnc29ydE9yZGVyJyxcclxuICAgICAgICAndHJ1ZVRleHQnLFxyXG4gICAgICAgICd0eXBlJyxcclxuICAgICAgICAndmFsaWRhdGlvblJ1bGVzJyxcclxuICAgICAgICAndmlzaWJsZScsXHJcbiAgICAgICAgJ3Zpc2libGVJbmRleCcsXHJcbiAgICAgICAgJ3dpZHRoJ1xyXG4gICAgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgRHhpQ29sdW1uQ29tcG9uZW50IGV4dGVuZHMgRHhpRGF0YUdyaWRDb2x1bW4ge1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhpcyBtZW1iZXIgc3VwcG9ydHMgdGhlIGludGVybmFsIGluZnJhc3RydWN0dXJlIGFuZCBpcyBub3QgaW50ZW5kZWQgdG8gYmUgdXNlZCBkaXJlY3RseSBmcm9tIHlvdXIgY29kZS5cclxuICAgICAqL1xyXG4gICAgQE91dHB1dCgpIGZpbHRlclZhbHVlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PjtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRoaXMgbWVtYmVyIHN1cHBvcnRzIHRoZSBpbnRlcm5hbCBpbmZyYXN0cnVjdHVyZSBhbmQgaXMgbm90IGludGVuZGVkIHRvIGJlIHVzZWQgZGlyZWN0bHkgZnJvbSB5b3VyIGNvZGUuXHJcbiAgICAgKi9cclxuICAgIEBPdXRwdXQoKSBmaWx0ZXJWYWx1ZXNDaGFuZ2U6IEV2ZW50RW1pdHRlcjxBcnJheTxhbnk+PjtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRoaXMgbWVtYmVyIHN1cHBvcnRzIHRoZSBpbnRlcm5hbCBpbmZyYXN0cnVjdHVyZSBhbmQgaXMgbm90IGludGVuZGVkIHRvIGJlIHVzZWQgZGlyZWN0bHkgZnJvbSB5b3VyIGNvZGUuXHJcbiAgICAgKi9cclxuICAgIEBPdXRwdXQoKSBncm91cEluZGV4Q2hhbmdlOiBFdmVudEVtaXR0ZXI8bnVtYmVyPjtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRoaXMgbWVtYmVyIHN1cHBvcnRzIHRoZSBpbnRlcm5hbCBpbmZyYXN0cnVjdHVyZSBhbmQgaXMgbm90IGludGVuZGVkIHRvIGJlIHVzZWQgZGlyZWN0bHkgZnJvbSB5b3VyIGNvZGUuXHJcbiAgICAgKi9cclxuICAgIEBPdXRwdXQoKSBzZWxlY3RlZEZpbHRlck9wZXJhdGlvbkNoYW5nZTogRXZlbnRFbWl0dGVyPHN0cmluZz47XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGlzIG1lbWJlciBzdXBwb3J0cyB0aGUgaW50ZXJuYWwgaW5mcmFzdHJ1Y3R1cmUgYW5kIGlzIG5vdCBpbnRlbmRlZCB0byBiZSB1c2VkIGRpcmVjdGx5IGZyb20geW91ciBjb2RlLlxyXG4gICAgICovXHJcbiAgICBAT3V0cHV0KCkgc29ydEluZGV4Q2hhbmdlOiBFdmVudEVtaXR0ZXI8bnVtYmVyPjtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRoaXMgbWVtYmVyIHN1cHBvcnRzIHRoZSBpbnRlcm5hbCBpbmZyYXN0cnVjdHVyZSBhbmQgaXMgbm90IGludGVuZGVkIHRvIGJlIHVzZWQgZGlyZWN0bHkgZnJvbSB5b3VyIGNvZGUuXHJcbiAgICAgKi9cclxuICAgIEBPdXRwdXQoKSBzb3J0T3JkZXJDaGFuZ2U6IEV2ZW50RW1pdHRlcjxzdHJpbmc+O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhpcyBtZW1iZXIgc3VwcG9ydHMgdGhlIGludGVybmFsIGluZnJhc3RydWN0dXJlIGFuZCBpcyBub3QgaW50ZW5kZWQgdG8gYmUgdXNlZCBkaXJlY3RseSBmcm9tIHlvdXIgY29kZS5cclxuICAgICAqL1xyXG4gICAgQE91dHB1dCgpIHZpc2libGVDaGFuZ2U6IEV2ZW50RW1pdHRlcjxib29sZWFuPjtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRoaXMgbWVtYmVyIHN1cHBvcnRzIHRoZSBpbnRlcm5hbCBpbmZyYXN0cnVjdHVyZSBhbmQgaXMgbm90IGludGVuZGVkIHRvIGJlIHVzZWQgZGlyZWN0bHkgZnJvbSB5b3VyIGNvZGUuXHJcbiAgICAgKi9cclxuICAgIEBPdXRwdXQoKSB2aXNpYmxlSW5kZXhDaGFuZ2U6IEV2ZW50RW1pdHRlcjxudW1iZXI+O1xyXG4gICAgcHJvdGVjdGVkIGdldCBfb3B0aW9uUGF0aCgpIHtcclxuICAgICAgICByZXR1cm4gJ2NvbHVtbnMnO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICBAQ29udGVudENoaWxkcmVuKGZvcndhcmRSZWYoKCkgPT4gRHhpQnV0dG9uQ29tcG9uZW50KSlcclxuICAgIGdldCBidXR0b25zQ2hpbGRyZW4oKTogUXVlcnlMaXN0PER4aUJ1dHRvbkNvbXBvbmVudD4ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9nZXRPcHRpb24oJ2J1dHRvbnMnKTtcclxuICAgIH1cclxuICAgIHNldCBidXR0b25zQ2hpbGRyZW4odmFsdWUpIHtcclxuICAgICAgICB0aGlzLnNldENoaWxkcmVuKCdidXR0b25zJywgdmFsdWUpO1xyXG4gICAgfVxyXG5cclxuICAgIEBDb250ZW50Q2hpbGRyZW4oZm9yd2FyZFJlZigoKSA9PiBEeGlDb2x1bW5Db21wb25lbnQpKVxyXG4gICAgZ2V0IGNvbHVtbnNDaGlsZHJlbigpOiBRdWVyeUxpc3Q8RHhpQ29sdW1uQ29tcG9uZW50PiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2dldE9wdGlvbignY29sdW1ucycpO1xyXG4gICAgfVxyXG4gICAgc2V0IGNvbHVtbnNDaGlsZHJlbih2YWx1ZSkge1xyXG4gICAgICAgIHRoaXMuc2V0Q2hpbGRyZW4oJ2NvbHVtbnMnLCB2YWx1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgQENvbnRlbnRDaGlsZHJlbihmb3J3YXJkUmVmKCgpID0+IER4aVZhbGlkYXRpb25SdWxlQ29tcG9uZW50KSlcclxuICAgIGdldCB2YWxpZGF0aW9uUnVsZXNDaGlsZHJlbigpOiBRdWVyeUxpc3Q8RHhpVmFsaWRhdGlvblJ1bGVDb21wb25lbnQ+IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZ2V0T3B0aW9uKCd2YWxpZGF0aW9uUnVsZXMnKTtcclxuICAgIH1cclxuICAgIHNldCB2YWxpZGF0aW9uUnVsZXNDaGlsZHJlbih2YWx1ZSkge1xyXG4gICAgICAgIHRoaXMuc2V0Q2hpbGRyZW4oJ3ZhbGlkYXRpb25SdWxlcycsIHZhbHVlKTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdHJ1Y3RvcihAU2tpcFNlbGYoKSBASG9zdCgpIHBhcmVudE9wdGlvbkhvc3Q6IE5lc3RlZE9wdGlvbkhvc3QsXHJcbiAgICAgICAgICAgIEBIb3N0KCkgb3B0aW9uSG9zdDogTmVzdGVkT3B0aW9uSG9zdCkge1xyXG4gICAgICAgIHN1cGVyKCk7XHJcblxyXG4gICAgICAgIHRoaXMuX2NyZWF0ZUV2ZW50RW1pdHRlcnMoW1xyXG4gICAgICAgICAgICB7IGVtaXQ6ICdmaWx0ZXJWYWx1ZUNoYW5nZScgfSxcclxuICAgICAgICAgICAgeyBlbWl0OiAnZmlsdGVyVmFsdWVzQ2hhbmdlJyB9LFxyXG4gICAgICAgICAgICB7IGVtaXQ6ICdncm91cEluZGV4Q2hhbmdlJyB9LFxyXG4gICAgICAgICAgICB7IGVtaXQ6ICdzZWxlY3RlZEZpbHRlck9wZXJhdGlvbkNoYW5nZScgfSxcclxuICAgICAgICAgICAgeyBlbWl0OiAnc29ydEluZGV4Q2hhbmdlJyB9LFxyXG4gICAgICAgICAgICB7IGVtaXQ6ICdzb3J0T3JkZXJDaGFuZ2UnIH0sXHJcbiAgICAgICAgICAgIHsgZW1pdDogJ3Zpc2libGVDaGFuZ2UnIH0sXHJcbiAgICAgICAgICAgIHsgZW1pdDogJ3Zpc2libGVJbmRleENoYW5nZScgfVxyXG4gICAgICAgIF0pO1xyXG5cclxuICAgICAgICBwYXJlbnRPcHRpb25Ib3N0LnNldE5lc3RlZE9wdGlvbih0aGlzKTtcclxuICAgICAgICBvcHRpb25Ib3N0LnNldEhvc3QodGhpcywgdGhpcy5fZnVsbE9wdGlvblBhdGguYmluZCh0aGlzKSk7XHJcbiAgICB9XHJcblxyXG5cclxufVxyXG5cclxuQE5nTW9kdWxlKHtcclxuICBkZWNsYXJhdGlvbnM6IFtcclxuICAgIER4aUNvbHVtbkNvbXBvbmVudFxyXG4gIF0sXHJcbiAgZXhwb3J0czogW1xyXG4gICAgRHhpQ29sdW1uQ29tcG9uZW50XHJcbiAgXSxcclxufSlcclxuZXhwb3J0IGNsYXNzIER4aUNvbHVtbk1vZHVsZSB7IH1cclxuIl19