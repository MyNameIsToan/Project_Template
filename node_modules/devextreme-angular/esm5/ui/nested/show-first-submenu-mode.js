/*!
 * devextreme-angular
 * Version: 19.2.6
 * Build date: Thu Jan 30 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import * as tslib_1 from "tslib";
/* tslint:disable:max-line-length */
import { Component, NgModule, Host, SkipSelf, Input } from '@angular/core';
import { NestedOptionHost, } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'devextreme-angular/core';
var DxoShowFirstSubmenuModeComponent = /** @class */ (function (_super) {
    tslib_1.__extends(DxoShowFirstSubmenuModeComponent, _super);
    function DxoShowFirstSubmenuModeComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoShowFirstSubmenuModeComponent.prototype, "delay", {
        get: function () {
            return this._getOption('delay');
        },
        set: function (value) {
            this._setOption('delay', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoShowFirstSubmenuModeComponent.prototype, "name", {
        get: function () {
            return this._getOption('name');
        },
        set: function (value) {
            this._setOption('name', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoShowFirstSubmenuModeComponent.prototype, "_optionPath", {
        get: function () {
            return 'showFirstSubmenuMode';
        },
        enumerable: true,
        configurable: true
    });
    DxoShowFirstSubmenuModeComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._fullOptionPath().slice(0, -1));
    };
    DxoShowFirstSubmenuModeComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], DxoShowFirstSubmenuModeComponent.prototype, "delay", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], DxoShowFirstSubmenuModeComponent.prototype, "name", null);
    DxoShowFirstSubmenuModeComponent = tslib_1.__decorate([ tslib_1.__param(0, SkipSelf()), tslib_1.__param(0, Host()),
        tslib_1.__param(1, Host()),
        tslib_1.__metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoShowFirstSubmenuModeComponent);
DxoShowFirstSubmenuModeComponent.ɵfac = function DxoShowFirstSubmenuModeComponent_Factory(t) { return new (t || DxoShowFirstSubmenuModeComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 5), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 1)); };
DxoShowFirstSubmenuModeComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxoShowFirstSubmenuModeComponent, selectors: [["dxo-show-first-submenu-mode"]], inputs: { delay: "delay", name: "name" }, features: [ɵngcc0.ɵɵProvidersFeature([NestedOptionHost]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoShowFirstSubmenuModeComponent_Template(rf, ctx) { }, styles: [""] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxoShowFirstSubmenuModeComponent, [{
        type: Component,
        args: [{
                selector: 'dxo-show-first-submenu-mode',
                template: '',
                providers: [NestedOptionHost],
                styles: ['']
            }]
    }], function () { return [{ type: ɵngcc1.NestedOptionHost, decorators: [{
                type: SkipSelf
            }, {
                type: Host
            }] }, { type: ɵngcc1.NestedOptionHost, decorators: [{
                type: Host
            }] }]; }, { delay: [{
            type: Input
        }], name: [{
            type: Input
        }] }); })();
    return DxoShowFirstSubmenuModeComponent;
}(NestedOption));
export { DxoShowFirstSubmenuModeComponent };
var DxoShowFirstSubmenuModeModule = /** @class */ (function () {
    function DxoShowFirstSubmenuModeModule() {
    }
DxoShowFirstSubmenuModeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DxoShowFirstSubmenuModeModule });
DxoShowFirstSubmenuModeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DxoShowFirstSubmenuModeModule_Factory(t) { return new (t || DxoShowFirstSubmenuModeModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxoShowFirstSubmenuModeModule, { declarations: [DxoShowFirstSubmenuModeComponent], exports: [DxoShowFirstSubmenuModeComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxoShowFirstSubmenuModeModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    DxoShowFirstSubmenuModeComponent
                ],
                exports: [
                    DxoShowFirstSubmenuModeComponent
                ]
            }]
    }], function () { return []; }, null); })();
    return DxoShowFirstSubmenuModeModule;
}());
export { DxoShowFirstSubmenuModeModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hvdy1maXJzdC1zdWJtZW51LW1vZGUuanMiLCJzb3VyY2VzIjpbImRldmV4dHJlbWUtYW5ndWxhci91aS9uZXN0ZWQvc2hvdy1maXJzdC1zdWJtZW51LW1vZGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7O0dBV0c7O0FBRUgsb0NBQW9DO0FBR3BDLE9BQU8sRUFDSCxTQUFTLEVBRVQsUUFBUSxFQUNSLElBQUksRUFDSixRQUFRLEVBQ1IsS0FBSyxFQUNSLE1BQU0sZUFBZSxDQUFDO0FBTXZCLE9BQU8sRUFDSCxnQkFBZ0IsR0FDbkIsTUFBTSx5QkFBeUIsQ0FBQztBQUNqQyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0seUJBQXlCLENBQUM7OztBQVN2RDtJQUFzRCw0REFBWTtJQXVCOUQsMENBQWdDLGdCQUFrQyxFQUNsRCxVQUE0QjtRQUQ1QyxZQUVJLGlCQUFPLFNBR1Y7UUFGRyxnQkFBZ0IsQ0FBQyxlQUFlLENBQUMsS0FBSSxDQUFDLENBQUM7UUFDdkMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxLQUFJLEVBQUUsS0FBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsS0FBSSxDQUFDLENBQUMsQ0FBQzs7SUFDOUQsQ0FBQztJQTFCRCxzQkFBSSxtREFBSzthQUFUO1lBQ0ksT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3BDLENBQUM7YUFDRCxVQUFVLEtBQWdEO1lBQ3RELElBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQ3BDLENBQUM7OztPQUhBO0lBTUQsc0JBQUksa0RBQUk7YUFBUjtZQUNJLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNuQyxDQUFDO2FBQ0QsVUFBUyxLQUFhO1lBQ2xCLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQ25DLENBQUM7OztPQUhBO0lBTUQsc0JBQWMseURBQVc7YUFBekI7WUFDSSxPQUFPLHNCQUFzQixDQUFDO1FBQ2xDLENBQUM7OztPQUFBO0lBV0Qsc0RBQVcsR0FBWDtRQUNJLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDaEUsQ0FBQzs7Z0JBVmlELGdCQUFnQix1QkFBckQsUUFBUSxZQUFJLElBQUk7Z0JBQ0QsZ0JBQWdCLHVCQUFuQyxJQUFJOztJQXRCYjtRQURDLEtBQUssRUFBRTs7O2lFQUdQO0lBTUQ7UUFEQyxLQUFLLEVBQUU7OztnRUFHUDtJQVpRLGdDQUFnQyx1QkFBdUIsU0FObkUsU0FBUyxDQUFDLGNBQ1AsUUFBUSxFQUFFLDNDQUtOLENBdUJTLG1CQUFBLFFBQVEsRUFBRSxDQUFBLEVBQUUsbUJBQUEsSUFBSSxFQUFFLENBQUE7V0E1QlEsY0FDdkMsUUFBUSxFQUFFLDNCQTRCRCxtQkFBQSxJQUFJLEVBQUUsQ0FBQTtDQTVCSCxjQUVaLFNBQVMsRUFBRSxDQUFDLGdCQUFnQixDQUFDLEtBeUJxQixnQkFBZ0I7QUExQnpELEVBQUUsV0FFZCxDQUFDLEZBeUI4QixnQkFBZ0I7T0F4Qm5DLGdDQUFnQyxDQW1DNUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFDRDtJQURBLHVDQUFDO0NBQUEsQUFuQ0QsQ0FBc0QsWUFBWSxHQW1DakU7U0FuQ1ksZ0NBQWdDO0FBNkM3QztJQUFBO0lBQTZDLENBQUM7SUFBakMsNkJBQTZCLGdDQVJ6QyxRQUFRLENBQUMsY0FDUixZQUFZLEVBQUU7aUJBQ1osZ0NBQWdDLGNBQ2pDLGNBQ0QsT0FBTyxFQUFFLGtCQUNQLGdDQUFnQyxjQUNqQyxXQUNGLENBQUMsUUFDVztrQkFBNkIsQ0FBSTs7Ozs7Ozs7Ozs7Z0RBQzlDO0lBRDZDLG9DQUFDO0NBQUEsQUFBOUMsSUFBOEM7U0FBakMsNkJBQTZCIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBkZXZleHRyZW1lLWFuZ3VsYXJcbiAqIFZlcnNpb246IDE5LjIuNlxuICogQnVpbGQgZGF0ZTogVGh1IEphbiAzMCAyMDIwXG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDEyIC0gMjAyMCBEZXZlbG9wZXIgRXhwcmVzcyBJbmMuIEFMTCBSSUdIVFMgUkVTRVJWRURcbiAqXG4gKiBUaGlzIHNvZnR3YXJlIG1heSBiZSBtb2RpZmllZCBhbmQgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIHRlcm1zXG4gKiBvZiB0aGUgTUlUIGxpY2Vuc2UuIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IG9mIHRoZSBwcm9qZWN0IGZvciBkZXRhaWxzLlxuICpcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9EZXZFeHByZXNzL2RldmV4dHJlbWUtYW5ndWxhclxuICovXG5cbi8qIHRzbGludDpkaXNhYmxlOm1heC1saW5lLWxlbmd0aCAqL1xyXG5cclxuXHJcbmltcG9ydCB7XHJcbiAgICBDb21wb25lbnQsXHJcbiAgICBPbkRlc3Ryb3ksXHJcbiAgICBOZ01vZHVsZSxcclxuICAgIEhvc3QsXHJcbiAgICBTa2lwU2VsZixcclxuICAgIElucHV0XHJcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5cclxuXHJcblxyXG5cclxuaW1wb3J0IHtcclxuICAgIE5lc3RlZE9wdGlvbkhvc3QsXHJcbn0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBOZXN0ZWRPcHRpb24gfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvY29yZSc7XHJcblxyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ2R4by1zaG93LWZpcnN0LXN1Ym1lbnUtbW9kZScsXHJcbiAgICB0ZW1wbGF0ZTogJycsXHJcbiAgICBzdHlsZXM6IFsnJ10sXHJcbiAgICBwcm92aWRlcnM6IFtOZXN0ZWRPcHRpb25Ib3N0XVxyXG59KVxyXG5leHBvcnQgY2xhc3MgRHhvU2hvd0ZpcnN0U3VibWVudU1vZGVDb21wb25lbnQgZXh0ZW5kcyBOZXN0ZWRPcHRpb24gaW1wbGVtZW50cyBPbkRlc3Ryb3kgIHtcclxuICAgIEBJbnB1dCgpXHJcbiAgICBnZXQgZGVsYXkoKTogbnVtYmVyIHwgeyBoaWRlPzogbnVtYmVyLCBzaG93PzogbnVtYmVyIH0ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9nZXRPcHRpb24oJ2RlbGF5Jyk7XHJcbiAgICB9XHJcbiAgICBzZXQgZGVsYXkodmFsdWU6IG51bWJlciB8IHsgaGlkZT86IG51bWJlciwgc2hvdz86IG51bWJlciB9KSB7XHJcbiAgICAgICAgdGhpcy5fc2V0T3B0aW9uKCdkZWxheScsIHZhbHVlKTtcclxuICAgIH1cclxuXHJcbiAgICBASW5wdXQoKVxyXG4gICAgZ2V0IG5hbWUoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZ2V0T3B0aW9uKCduYW1lJyk7XHJcbiAgICB9XHJcbiAgICBzZXQgbmFtZSh2YWx1ZTogc3RyaW5nKSB7XHJcbiAgICAgICAgdGhpcy5fc2V0T3B0aW9uKCduYW1lJywgdmFsdWUpO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICBwcm90ZWN0ZWQgZ2V0IF9vcHRpb25QYXRoKCkge1xyXG4gICAgICAgIHJldHVybiAnc2hvd0ZpcnN0U3VibWVudU1vZGUnO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICBjb25zdHJ1Y3RvcihAU2tpcFNlbGYoKSBASG9zdCgpIHBhcmVudE9wdGlvbkhvc3Q6IE5lc3RlZE9wdGlvbkhvc3QsXHJcbiAgICAgICAgICAgIEBIb3N0KCkgb3B0aW9uSG9zdDogTmVzdGVkT3B0aW9uSG9zdCkge1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICAgICAgcGFyZW50T3B0aW9uSG9zdC5zZXROZXN0ZWRPcHRpb24odGhpcyk7XHJcbiAgICAgICAgb3B0aW9uSG9zdC5zZXRIb3N0KHRoaXMsIHRoaXMuX2Z1bGxPcHRpb25QYXRoLmJpbmQodGhpcykpO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICBuZ09uRGVzdHJveSgpIHtcclxuICAgICAgICB0aGlzLl9hZGRSZW1vdmVkT3B0aW9uKHRoaXMuX2Z1bGxPcHRpb25QYXRoKCkuc2xpY2UoMCwgLTEpKTtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICBEeG9TaG93Rmlyc3RTdWJtZW51TW9kZUNvbXBvbmVudFxyXG4gIF0sXHJcbiAgZXhwb3J0czogW1xyXG4gICAgRHhvU2hvd0ZpcnN0U3VibWVudU1vZGVDb21wb25lbnRcclxuICBdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgRHhvU2hvd0ZpcnN0U3VibWVudU1vZGVNb2R1bGUgeyB9XHJcbiJdfQ==