/*!
 * devextreme-angular
 * Version: 19.2.6
 * Build date: Thu Jan 30 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import * as tslib_1 from "tslib";
/* tslint:disable:max-line-length */
import { Component, NgModule, Host, SkipSelf, Input } from '@angular/core';
import { NestedOptionHost, } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'devextreme-angular/core';
var DxoFilterOperationDescriptionsComponent = /** @class */ (function (_super) {
    tslib_1.__extends(DxoFilterOperationDescriptionsComponent, _super);
    function DxoFilterOperationDescriptionsComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "between", {
        get: function () {
            return this._getOption('between');
        },
        set: function (value) {
            this._setOption('between', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "contains", {
        get: function () {
            return this._getOption('contains');
        },
        set: function (value) {
            this._setOption('contains', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "endsWith", {
        get: function () {
            return this._getOption('endsWith');
        },
        set: function (value) {
            this._setOption('endsWith', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "equal", {
        get: function () {
            return this._getOption('equal');
        },
        set: function (value) {
            this._setOption('equal', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "greaterThan", {
        get: function () {
            return this._getOption('greaterThan');
        },
        set: function (value) {
            this._setOption('greaterThan', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "greaterThanOrEqual", {
        get: function () {
            return this._getOption('greaterThanOrEqual');
        },
        set: function (value) {
            this._setOption('greaterThanOrEqual', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "isBlank", {
        get: function () {
            return this._getOption('isBlank');
        },
        set: function (value) {
            this._setOption('isBlank', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "isNotBlank", {
        get: function () {
            return this._getOption('isNotBlank');
        },
        set: function (value) {
            this._setOption('isNotBlank', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "lessThan", {
        get: function () {
            return this._getOption('lessThan');
        },
        set: function (value) {
            this._setOption('lessThan', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "lessThanOrEqual", {
        get: function () {
            return this._getOption('lessThanOrEqual');
        },
        set: function (value) {
            this._setOption('lessThanOrEqual', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "notContains", {
        get: function () {
            return this._getOption('notContains');
        },
        set: function (value) {
            this._setOption('notContains', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "notEqual", {
        get: function () {
            return this._getOption('notEqual');
        },
        set: function (value) {
            this._setOption('notEqual', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "startsWith", {
        get: function () {
            return this._getOption('startsWith');
        },
        set: function (value) {
            this._setOption('startsWith', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "_optionPath", {
        get: function () {
            return 'filterOperationDescriptions';
        },
        enumerable: true,
        configurable: true
    });
    DxoFilterOperationDescriptionsComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._fullOptionPath().slice(0, -1));
    };
    DxoFilterOperationDescriptionsComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], DxoFilterOperationDescriptionsComponent.prototype, "between", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], DxoFilterOperationDescriptionsComponent.prototype, "contains", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], DxoFilterOperationDescriptionsComponent.prototype, "endsWith", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], DxoFilterOperationDescriptionsComponent.prototype, "equal", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], DxoFilterOperationDescriptionsComponent.prototype, "greaterThan", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], DxoFilterOperationDescriptionsComponent.prototype, "greaterThanOrEqual", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], DxoFilterOperationDescriptionsComponent.prototype, "isBlank", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], DxoFilterOperationDescriptionsComponent.prototype, "isNotBlank", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], DxoFilterOperationDescriptionsComponent.prototype, "lessThan", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], DxoFilterOperationDescriptionsComponent.prototype, "lessThanOrEqual", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], DxoFilterOperationDescriptionsComponent.prototype, "notContains", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], DxoFilterOperationDescriptionsComponent.prototype, "notEqual", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], DxoFilterOperationDescriptionsComponent.prototype, "startsWith", null);
    DxoFilterOperationDescriptionsComponent = tslib_1.__decorate([ tslib_1.__param(0, SkipSelf()), tslib_1.__param(0, Host()),
        tslib_1.__param(1, Host()),
        tslib_1.__metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoFilterOperationDescriptionsComponent);
DxoFilterOperationDescriptionsComponent.ɵfac = function DxoFilterOperationDescriptionsComponent_Factory(t) { return new (t || DxoFilterOperationDescriptionsComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 5), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 1)); };
DxoFilterOperationDescriptionsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxoFilterOperationDescriptionsComponent, selectors: [["dxo-filter-operation-descriptions"]], inputs: { between: "between", contains: "contains", endsWith: "endsWith", equal: "equal", greaterThan: "greaterThan", greaterThanOrEqual: "greaterThanOrEqual", isBlank: "isBlank", isNotBlank: "isNotBlank", lessThan: "lessThan", lessThanOrEqual: "lessThanOrEqual", notContains: "notContains", notEqual: "notEqual", startsWith: "startsWith" }, features: [ɵngcc0.ɵɵProvidersFeature([NestedOptionHost]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoFilterOperationDescriptionsComponent_Template(rf, ctx) { }, styles: [""] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxoFilterOperationDescriptionsComponent, [{
        type: Component,
        args: [{
                selector: 'dxo-filter-operation-descriptions',
                template: '',
                providers: [NestedOptionHost],
                styles: ['']
            }]
    }], function () { return [{ type: ɵngcc1.NestedOptionHost, decorators: [{
                type: SkipSelf
            }, {
                type: Host
            }] }, { type: ɵngcc1.NestedOptionHost, decorators: [{
                type: Host
            }] }]; }, { between: [{
            type: Input
        }], contains: [{
            type: Input
        }], endsWith: [{
            type: Input
        }], equal: [{
            type: Input
        }], greaterThan: [{
            type: Input
        }], greaterThanOrEqual: [{
            type: Input
        }], isBlank: [{
            type: Input
        }], isNotBlank: [{
            type: Input
        }], lessThan: [{
            type: Input
        }], lessThanOrEqual: [{
            type: Input
        }], notContains: [{
            type: Input
        }], notEqual: [{
            type: Input
        }], startsWith: [{
            type: Input
        }] }); })();
    return DxoFilterOperationDescriptionsComponent;
}(NestedOption));
export { DxoFilterOperationDescriptionsComponent };
var DxoFilterOperationDescriptionsModule = /** @class */ (function () {
    function DxoFilterOperationDescriptionsModule() {
    }
DxoFilterOperationDescriptionsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DxoFilterOperationDescriptionsModule });
DxoFilterOperationDescriptionsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DxoFilterOperationDescriptionsModule_Factory(t) { return new (t || DxoFilterOperationDescriptionsModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxoFilterOperationDescriptionsModule, { declarations: [DxoFilterOperationDescriptionsComponent], exports: [DxoFilterOperationDescriptionsComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxoFilterOperationDescriptionsModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    DxoFilterOperationDescriptionsComponent
                ],
                exports: [
                    DxoFilterOperationDescriptionsComponent
                ]
            }]
    }], function () { return []; }, null); })();
    return DxoFilterOperationDescriptionsModule;
}());
export { DxoFilterOperationDescriptionsModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,