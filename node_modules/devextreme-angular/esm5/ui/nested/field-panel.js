/*!
 * devextreme-angular
 * Version: 19.2.6
 * Build date: Thu Jan 30 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import * as tslib_1 from "tslib";
/* tslint:disable:max-line-length */
import { Component, NgModule, Host, SkipSelf, Input } from '@angular/core';
import { NestedOptionHost, } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'devextreme-angular/core';
var DxoFieldPanelComponent = /** @class */ (function (_super) {
    tslib_1.__extends(DxoFieldPanelComponent, _super);
    function DxoFieldPanelComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoFieldPanelComponent.prototype, "allowFieldDragging", {
        get: function () {
            return this._getOption('allowFieldDragging');
        },
        set: function (value) {
            this._setOption('allowFieldDragging', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFieldPanelComponent.prototype, "showColumnFields", {
        get: function () {
            return this._getOption('showColumnFields');
        },
        set: function (value) {
            this._setOption('showColumnFields', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFieldPanelComponent.prototype, "showDataFields", {
        get: function () {
            return this._getOption('showDataFields');
        },
        set: function (value) {
            this._setOption('showDataFields', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFieldPanelComponent.prototype, "showFilterFields", {
        get: function () {
            return this._getOption('showFilterFields');
        },
        set: function (value) {
            this._setOption('showFilterFields', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFieldPanelComponent.prototype, "showRowFields", {
        get: function () {
            return this._getOption('showRowFields');
        },
        set: function (value) {
            this._setOption('showRowFields', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFieldPanelComponent.prototype, "texts", {
        get: function () {
            return this._getOption('texts');
        },
        set: function (value) {
            this._setOption('texts', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFieldPanelComponent.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFieldPanelComponent.prototype, "_optionPath", {
        get: function () {
            return 'fieldPanel';
        },
        enumerable: true,
        configurable: true
    });
    DxoFieldPanelComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._fullOptionPath().slice(0, -1));
    };
    DxoFieldPanelComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Boolean),
        tslib_1.__metadata("design:paramtypes", [Boolean])
    ], DxoFieldPanelComponent.prototype, "allowFieldDragging", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Boolean),
        tslib_1.__metadata("design:paramtypes", [Boolean])
    ], DxoFieldPanelComponent.prototype, "showColumnFields", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Boolean),
        tslib_1.__metadata("design:paramtypes", [Boolean])
    ], DxoFieldPanelComponent.prototype, "showDataFields", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Boolean),
        tslib_1.__metadata("design:paramtypes", [Boolean])
    ], DxoFieldPanelComponent.prototype, "showFilterFields", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Boolean),
        tslib_1.__metadata("design:paramtypes", [Boolean])
    ], DxoFieldPanelComponent.prototype, "showRowFields", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], DxoFieldPanelComponent.prototype, "texts", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Boolean),
        tslib_1.__metadata("design:paramtypes", [Boolean])
    ], DxoFieldPanelComponent.prototype, "visible", null);
    DxoFieldPanelComponent = tslib_1.__decorate([ tslib_1.__param(0, SkipSelf()), tslib_1.__param(0, Host()),
        tslib_1.__param(1, Host()),
        tslib_1.__metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoFieldPanelComponent);
DxoFieldPanelComponent.ɵfac = function DxoFieldPanelComponent_Factory(t) { return new (t || DxoFieldPanelComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 5), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 1)); };
DxoFieldPanelComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxoFieldPanelComponent, selectors: [["dxo-field-panel"]], inputs: { allowFieldDragging: "allowFieldDragging", showColumnFields: "showColumnFields", showDataFields: "showDataFields", showFilterFields: "showFilterFields", showRowFields: "showRowFields", texts: "texts", visible: "visible" }, features: [ɵngcc0.ɵɵProvidersFeature([NestedOptionHost]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoFieldPanelComponent_Template(rf, ctx) { }, styles: [""] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxoFieldPanelComponent, [{
        type: Component,
        args: [{
                selector: 'dxo-field-panel',
                template: '',
                providers: [NestedOptionHost],
                styles: ['']
            }]
    }], function () { return [{ type: ɵngcc1.NestedOptionHost, decorators: [{
                type: SkipSelf
            }, {
                type: Host
            }] }, { type: ɵngcc1.NestedOptionHost, decorators: [{
                type: Host
            }] }]; }, { allowFieldDragging: [{
            type: Input
        }], showColumnFields: [{
            type: Input
        }], showDataFields: [{
            type: Input
        }], showFilterFields: [{
            type: Input
        }], showRowFields: [{
            type: Input
        }], texts: [{
            type: Input
        }], visible: [{
            type: Input
        }] }); })();
    return DxoFieldPanelComponent;
}(NestedOption));
export { DxoFieldPanelComponent };
var DxoFieldPanelModule = /** @class */ (function () {
    function DxoFieldPanelModule() {
    }
DxoFieldPanelModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DxoFieldPanelModule });
DxoFieldPanelModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DxoFieldPanelModule_Factory(t) { return new (t || DxoFieldPanelModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxoFieldPanelModule, { declarations: [DxoFieldPanelComponent], exports: [DxoFieldPanelComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxoFieldPanelModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    DxoFieldPanelComponent
                ],
                exports: [
                    DxoFieldPanelComponent
                ]
            }]
    }], function () { return []; }, null); })();
    return DxoFieldPanelModule;
}());
export { DxoFieldPanelModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,