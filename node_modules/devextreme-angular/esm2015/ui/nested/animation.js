/*!
 * devextreme-angular
 * Version: 19.2.6
 * Build date: Thu Jan 30 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import * as tslib_1 from "tslib";
/* tslint:disable:max-line-length */
/* tslint:disable:use-input-property-decorator */
import { Component, NgModule, Host, SkipSelf } from '@angular/core';
import { NestedOptionHost, } from 'devextreme-angular/core';
import { DxoAnimationConfig } from './base/animation-config';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'devextreme-angular/core';
let DxoAnimationComponent = class DxoAnimationComponent extends DxoAnimationConfig {
    constructor(parentOptionHost, optionHost) {
        super();
        parentOptionHost.setNestedOption(this);
        optionHost.setHost(this, this._fullOptionPath.bind(this));
    }
    get _optionPath() {
        return 'animation';
    }
    ngOnDestroy() {
        this._addRemovedOption(this._fullOptionPath().slice(0, -1));
    }
};
DxoAnimationComponent.ɵfac = function DxoAnimationComponent_Factory(t) { return new (t || DxoAnimationComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 5), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 1)); };
DxoAnimationComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxoAnimationComponent, selectors: [["dxo-animation"]], inputs: { duration: "duration", easing: "easing", enabled: "enabled", maxPointCountSupported: "maxPointCountSupported", hide: "hide", show: "show", complete: "complete", delay: "delay", direction: "direction", from: "from", staggerDelay: "staggerDelay", start: "start", to: "to", type: "type" }, features: [ɵngcc0.ɵɵProvidersFeature([NestedOptionHost]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoAnimationComponent_Template(rf, ctx) { }, styles: [""] });
DxoAnimationComponent.ctorParameters = () => [
    { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
    { type: NestedOptionHost, decorators: [{ type: Host }] }
];
DxoAnimationComponent = tslib_1.__decorate([ tslib_1.__param(0, SkipSelf()), tslib_1.__param(0, Host()),
    tslib_1.__param(1, Host()),
    tslib_1.__metadata("design:paramtypes", [NestedOptionHost,
        NestedOptionHost])
], DxoAnimationComponent);
export { DxoAnimationComponent };
let DxoAnimationModule = class DxoAnimationModule {
};
DxoAnimationModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DxoAnimationModule });
DxoAnimationModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DxoAnimationModule_Factory(t) { return new (t || DxoAnimationModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxoAnimationComponent, [{
        type: Component,
        args: [{
                selector: 'dxo-animation',
                template: '',
                providers: [NestedOptionHost],
                inputs: [
                    'duration',
                    'easing',
                    'enabled',
                    'maxPointCountSupported',
                    'hide',
                    'show',
                    'complete',
                    'delay',
                    'direction',
                    'from',
                    'staggerDelay',
                    'start',
                    'to',
                    'type'
                ],
                styles: ['']
            }]
    }], function () { return [{ type: ɵngcc1.NestedOptionHost, decorators: [{
                type: SkipSelf
            }, {
                type: Host
            }] }, { type: ɵngcc1.NestedOptionHost, decorators: [{
                type: Host
            }] }]; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxoAnimationModule, { declarations: [DxoAnimationComponent], exports: [DxoAnimationComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxoAnimationModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    DxoAnimationComponent
                ],
                exports: [
                    DxoAnimationComponent
                ]
            }]
    }], null, null); })();
export { DxoAnimationModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5pbWF0aW9uLmpzIiwic291cmNlcyI6WyJkZXZleHRyZW1lLWFuZ3VsYXIvdWkvbmVzdGVkL2FuaW1hdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7R0FXRzs7QUFFSCxvQ0FBb0M7QUFFcEMsaURBQWlEO0FBRWpELE9BQU8sRUFDSCxTQUFTLEVBRVQsUUFBUSxFQUNSLElBQUksRUFDSixRQUFRLEVBQ1gsTUFBTSxlQUFlLENBQUM7QUFNdkIsT0FBTyxFQUNILGdCQUFnQixHQUNuQixNQUFNLHlCQUF5QixDQUFDO0FBQ2pDLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHlCQUF5QixDQUFDOzs7QUF5QjdELElBQWEscUJBQXFCLEdBQWxDLE1BQWEscUJBQXNCLFNBQVEsa0JBQWtCO0lBT3pELFlBQWdDLGdCQUFrQyxFQUNsRCxVQUE0QjtRQUN4QyxLQUFLLEVBQUUsQ0FBQztRQUNSLGdCQUFnQixDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN2QyxVQUFVLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQzlELENBQUM7SUFWRCxJQUFjLFdBQVc7UUFDckIsT0FBTyxXQUFXLENBQUM7SUFDdkIsQ0FBQztJQVdELFdBQVc7UUFDUCxJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2hFLENBQUM7Q0FFSjs7OGxCQUFBOztZQVpxRCxnQkFBZ0IsdUJBQXJELFFBQVEsWUFBSSxJQUFJO1lBQ0QsZ0JBQWdCLHVCQUFuQyxJQUFJOztBQVJKLHFCQUFxQix1QkFBdUIsS0F0QnhELFNBQVMsQ0FBQyxVQUNQLFFBQVEsRUFBRSxlQUFlLFVBQ3pCLDVEQW9CQSxDQU9hLG1CQUFBLFFBQVEsRUFBRSxDQUFBLEVBQUUsbUJBQUEsSUFBSSxFQUFFLENBQUE7T0EzQnZCLEVBQUUsRUFBRSxVQUVaLFNBQVMsMUJBMEJBLG1CQUFBLElBQUksRUFBRSxDQUFBO0FBMUJKLENBQUMsZ0JBQWdCLENBQUMsVUFDN0IsTUFBTSxFQUFFLGNBQ0osVUFBVSxmQXVCb0MsZ0JBQWdCO1dBdEI5RCxRQUFRLFhBdUJnQixnQkFBZ0I7TUF0QnhDLFNBQVMsWkFjSixxQkFBcUIsQ0FtQmpDO0VBaENPLHdCQUF3QixqQkFhbkIscUJBQXFCO01BWjFCLE1BQU0sY0FDTixNQUFNLGNBQ04sOUNBdUNSLElBQWEsa0JBQWtCLEdBQS9CLE1BQWEsa0JBQWtCO0NBQUk7Q0F2Q2pCLGNBQ1YsT0FBTyxjQUNQLFdBQVcsY0FDWCxNQUFNO0FBQ04sY0FBYyxjQUNkLE9BQU8sY0FDUCxJQUFJLGNBQ0osTUFBTSxVQUNULG1CQWpCUSxFQUFFLE9Ba0JkLENBQUMsOUdBOEJpQyxDQUF0QixrQkFBa0IsNEJBUjlCLFFBQVEsQ0FBQyxVQUNSLFlBQVksRUFBRSxjQUNaLHFCQUFxQixVQUN0QixVQUNELE9BQU8sRUFBRTtZQUNQLHFCQUFxQixVQUN0QixPQUNGLENBQUMsSUFDVyxrQkFBa0IsQ0FBSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzBCQUNuQztTQURhLGtCQUFrQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogZGV2ZXh0cmVtZS1hbmd1bGFyXG4gKiBWZXJzaW9uOiAxOS4yLjZcbiAqIEJ1aWxkIGRhdGU6IFRodSBKYW4gMzAgMjAyMFxuICpcbiAqIENvcHlyaWdodCAoYykgMjAxMiAtIDIwMjAgRGV2ZWxvcGVyIEV4cHJlc3MgSW5jLiBBTEwgUklHSFRTIFJFU0VSVkVEXG4gKlxuICogVGhpcyBzb2Z0d2FyZSBtYXkgYmUgbW9kaWZpZWQgYW5kIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSB0ZXJtc1xuICogb2YgdGhlIE1JVCBsaWNlbnNlLiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBvZiB0aGUgcHJvamVjdCBmb3IgZGV0YWlscy5cbiAqXG4gKiBodHRwczovL2dpdGh1Yi5jb20vRGV2RXhwcmVzcy9kZXZleHRyZW1lLWFuZ3VsYXJcbiAqL1xuXG4vKiB0c2xpbnQ6ZGlzYWJsZTptYXgtbGluZS1sZW5ndGggKi9cclxuXHJcbi8qIHRzbGludDpkaXNhYmxlOnVzZS1pbnB1dC1wcm9wZXJ0eS1kZWNvcmF0b3IgKi9cclxuXHJcbmltcG9ydCB7XHJcbiAgICBDb21wb25lbnQsXHJcbiAgICBPbkRlc3Ryb3ksXHJcbiAgICBOZ01vZHVsZSxcclxuICAgIEhvc3QsXHJcbiAgICBTa2lwU2VsZlxyXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuXHJcblxyXG5cclxuXHJcbmltcG9ydCB7XHJcbiAgICBOZXN0ZWRPcHRpb25Ib3N0LFxyXG59IGZyb20gJ2RldmV4dHJlbWUtYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRHhvQW5pbWF0aW9uQ29uZmlnIH0gZnJvbSAnLi9iYXNlL2FuaW1hdGlvbi1jb25maWcnO1xyXG5cclxuXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICdkeG8tYW5pbWF0aW9uJyxcclxuICAgIHRlbXBsYXRlOiAnJyxcclxuICAgIHN0eWxlczogWycnXSxcclxuICAgIHByb3ZpZGVyczogW05lc3RlZE9wdGlvbkhvc3RdLFxyXG4gICAgaW5wdXRzOiBbXHJcbiAgICAgICAgJ2R1cmF0aW9uJyxcclxuICAgICAgICAnZWFzaW5nJyxcclxuICAgICAgICAnZW5hYmxlZCcsXHJcbiAgICAgICAgJ21heFBvaW50Q291bnRTdXBwb3J0ZWQnLFxyXG4gICAgICAgICdoaWRlJyxcclxuICAgICAgICAnc2hvdycsXHJcbiAgICAgICAgJ2NvbXBsZXRlJyxcclxuICAgICAgICAnZGVsYXknLFxyXG4gICAgICAgICdkaXJlY3Rpb24nLFxyXG4gICAgICAgICdmcm9tJyxcclxuICAgICAgICAnc3RhZ2dlckRlbGF5JyxcclxuICAgICAgICAnc3RhcnQnLFxyXG4gICAgICAgICd0bycsXHJcbiAgICAgICAgJ3R5cGUnXHJcbiAgICBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBEeG9BbmltYXRpb25Db21wb25lbnQgZXh0ZW5kcyBEeG9BbmltYXRpb25Db25maWcgaW1wbGVtZW50cyBPbkRlc3Ryb3kgIHtcclxuXHJcbiAgICBwcm90ZWN0ZWQgZ2V0IF9vcHRpb25QYXRoKCkge1xyXG4gICAgICAgIHJldHVybiAnYW5pbWF0aW9uJztcclxuICAgIH1cclxuXHJcblxyXG4gICAgY29uc3RydWN0b3IoQFNraXBTZWxmKCkgQEhvc3QoKSBwYXJlbnRPcHRpb25Ib3N0OiBOZXN0ZWRPcHRpb25Ib3N0LFxyXG4gICAgICAgICAgICBASG9zdCgpIG9wdGlvbkhvc3Q6IE5lc3RlZE9wdGlvbkhvc3QpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIHBhcmVudE9wdGlvbkhvc3Quc2V0TmVzdGVkT3B0aW9uKHRoaXMpO1xyXG4gICAgICAgIG9wdGlvbkhvc3Quc2V0SG9zdCh0aGlzLCB0aGlzLl9mdWxsT3B0aW9uUGF0aC5iaW5kKHRoaXMpKTtcclxuICAgIH1cclxuXHJcblxyXG4gICAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICAgICAgdGhpcy5fYWRkUmVtb3ZlZE9wdGlvbih0aGlzLl9mdWxsT3B0aW9uUGF0aCgpLnNsaWNlKDAsIC0xKSk7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW1xyXG4gICAgRHhvQW5pbWF0aW9uQ29tcG9uZW50XHJcbiAgXSxcclxuICBleHBvcnRzOiBbXHJcbiAgICBEeG9BbmltYXRpb25Db21wb25lbnRcclxuICBdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgRHhvQW5pbWF0aW9uTW9kdWxlIHsgfVxyXG4iXX0=